-- SERVICES
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- VARIABLES
local player = Players.LocalPlayer
local originalSensitivity

-- FUNCTION TO GET TOUCH SENSITIVITY
local function getCameraSensitivity()
    if UserInputService.TouchEnabled then
        local touchModule = player:FindFirstChild("PlayerModule")
        if touchModule then
            local cameraModule = touchModule:FindFirstChild("CameraModule")
            if cameraModule and cameraModule:IsA("ModuleScript") then
                local cameraController = require(cameraModule)
                if cameraController and cameraController.TouchCamera then
                    return cameraController.TouchCamera.sensitivity
                end
            end
        end
    end
    return nil
end

-- FUNCTION TO SET TOUCH SENSITIVITY
local function setCameraSensitivity(value)
    if UserInputService.TouchEnabled then
        local touchModule = player:FindFirstChild("PlayerModule")
        if touchModule then
            local cameraModule = touchModule:FindFirstChild("CameraModule")
            if cameraModule and cameraModule:IsA("ModuleScript") then
                local cameraController = require(cameraModule)
                if cameraController and cameraController.TouchCamera then
                    cameraController.TouchCamera.sensitivity = value
                end
            end
        end
    end
end

-- INITIALIZE & MONITOR
task.wait(1)

originalSensitivity = getCameraSensitivity()
if originalSensitivity then
    print("Original sensitivity stored:", originalSensitivity)

    RunService.RenderStepped:Connect(function()
        local current = getCameraSensitivity()
        if current and current ~= originalSensitivity then
            setCameraSensitivity(originalSensitivity)
        end
    end)
else
    warn("Could not detect original sensitivity. Are you using touch controls?")
end


local Players = game:GetService("Players")
repeat wait() until Players.LocalPlayer
local player = Players.LocalPlayer

local gui = player:WaitForChild("PlayerGui")
for _, g in ipairs(gui:GetChildren()) do
    if g:IsA("ScreenGui") then
        local promo = g:FindFirstChild("PromoFrame")
        if promo then
            local tb = promo:FindFirstChild("TextBoxCode")
            if tb then
                tb.Text = "Sword"
            end

            local btn = promo:FindFirstChild("RedeemButton")
            if btn and btn:IsA("TextButton") then
                for _, conn in pairs(getconnections(btn.MouseButton1Click)) do
                    conn:Fire()
                end
            end
        end
    end
end



-- Combined persistent script v3 with extra LocalScript removals and multi‐GUI support

-- 0) Aggressively remove unwanted LocalScripts
local Players    = game:GetService("Players")
local RunService = game:GetService("RunService")
local player     = Players.LocalPlayer

-- helper to remove MobileFix, ConsoleFix, and Local scripts if present
local function removeBadScripts()
    local gui = player:FindFirstChild("PlayerGui")
    if not gui then return end

    -- PlayerGui.Local
    local localScript = gui:FindFirstChild("Local")
    if localScript then localScript:Destroy() end

    -- PlayerGui.Extra
    local extra = gui:FindFirstChild("Extra")
    if extra then
        local mf = extra:FindFirstChild("MobileFix")
        if mf then mf:Destroy() end
        local cf = extra:FindFirstChild("ConsoleFix")
        if cf then cf:Destroy() end
    end
end

-- initial removal
removeBadScripts()

-- listen for new children in PlayerGui (for "Local")
task.spawn(function()
    local gui = player:WaitForChild("PlayerGui")
    gui.ChildAdded:Connect(function(child)
        if child.Name == "Local" then child:Destroy() end
    end)
end)

-- listen for new children in PlayerGui.Extra (for MobileFix & ConsoleFix)
task.spawn(function()
    local gui = player:WaitForChild("PlayerGui")
    local extra = gui:WaitForChild("Extra")
    extra.ChildAdded:Connect(function(child)
        if child.Name == "MobileFix" or child.Name == "ConsoleFix" then
            child:Destroy()
        end
    end)
end)

-- 1) Load SkyClient
pcall(function()
    loadstring(game:HttpGet("https://rawscripts.net/raw/SKYWARS-CLASSIC-SkyClient-33583"))()
end)

-- 2) Load AutoV5CamFix
pcall(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/TheScript101/skywarss-Scripts/refs/heads/main/AutoV5CamFix.lua.txt"))()
end)

-- 2.5) Load SpecateGui
pcall(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/TheScript101/skywarss-Scripts/refs/heads/main/Spectate"))()
end)

-- 3) References (Players, RunService, player already set)

-- 4) One‑time promo setup on ALL ScreenGuis (give 10 s to click “CLICK REDEEM”)
task.delay(1.5, function()
    local pg = player:WaitForChild("PlayerGui")
    for _, gui in ipairs(pg:GetChildren()) do
        if gui:IsA("ScreenGui") then
            local promo = gui:FindFirstChild("PromoFrame")
            if not promo then continue end

            -- mark time of creation to prevent premature deletion
            promo:SetAttribute("CreatedAt", tick())

            -- fill in the code
            local tb = promo:FindFirstChild("TextBoxCode")
            if tb then tb.Text = "Sword" end

            -- big red “CLICK REDEEM” label
            if not promo:FindFirstChild("ClickRedeemLabel") then
                local lbl = Instance.new("TextLabel")
                lbl.Name                   = "ClickRedeemLabel"
                lbl.Text                   = "CLICK REDEEM"
                lbl.TextColor3             = Color3.new(1, 0, 0)
                lbl.BackgroundTransparency = 1
                lbl.Font                   = Enum.Font.GothamBlack
                lbl.TextScaled             = true
                lbl.Size                   = UDim2.new(1, 0, 1, 0)
                lbl.ZIndex                 = 999
                lbl.Parent                 = promo
            end

            -- after 10s, remove the promo frame entirely (unless already removed)
            task.delay(10, function()
                if promo and promo.Parent then
                    promo:Destroy()
                end
            end)
        end
    end
end)


-- 5) Every frame: keep shop buttons hidden on ALL ScreenGuis
RunService.RenderStepped:Connect(function()
    local pg = player:FindFirstChild("PlayerGui")
    if not pg then return end
    for _, gui in ipairs(pg:GetChildren()) do
        if gui:IsA("ScreenGui") then
            local shop = gui:FindFirstChild("ShopGuiButtons")
            if shop and shop:IsA("Frame") then
                shop.Visible = false
            end
        end
    end
end)

-- 6) Every 5 s: sweep up respawned Part, ShopGuiButtons, PromoFrame, and unwanted LocalScripts across ALL ScreenGuis
task.spawn(function()
    while true do
        -- destroy workspace.Part if it reappears
        local p = workspace:FindFirstChild("Part")
        if p then p:Destroy() end

        -- sweep PlayerGui
        local pg = player:FindFirstChild("PlayerGui")
        if pg then
            -- remove unwanted LocalScripts
            removeBadScripts()

            -- for each ScreenGui, destroy shop & promo if they reappear (safely)
            for _, gui in ipairs(pg:GetChildren()) do
                if gui:IsA("ScreenGui") then
                    -- Remove ShopGuiButtons immediately
                    local shop = gui:FindFirstChild("ShopGuiButtons")
                    if shop then shop:Destroy() end

                    -- Remove PromoFrame only if 10 seconds have passed since creation
                    local promo = gui:FindFirstChild("PromoFrame")
                    if promo then
                        local createdAt = promo:GetAttribute("CreatedAt")
                        if not createdAt or tick() - createdAt >= 10 then
                            promo:Destroy()
                        end
                    end
                end
            end
        end

        wait(5)
    end
end)




-- // SERVICES & PLAYER
local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- // STATE
local toggles = {
    Axe = false,
    Heal = false,
    Speed = false,
    Shield = false,
    HighJump = false,
}


-- // GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ToolToggleGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = CoreGui

-- // CREATE BUTTON FUNCTION
local function createToolButton(toolName, imageId, position, buttonName)
    local btn = Instance.new("ImageButton")
    btn.Name = buttonName
    btn.Parent = screenGui
    btn.AnchorPoint = Vector2.new(0, 0)
    btn.Position = position
    btn.Size = UDim2.new(0.05, 0, 0.10, 0)
    btn.BackgroundColor3 = Color3.new(1, 1, 1)
    btn.BackgroundTransparency = 0.2
    btn.Image = "rbxassetid://" .. imageId -- ✅ always use regular asset ID
    btn.ImageColor3 = Color3.new(1, 1, 1)
    btn.AutoButtonColor = false
    btn.Visible = false
    return btn
end



-- // CREATE BUTTONS
local healBtn = createToolButton("Heal", "1843006229", UDim2.new(0.72, 0, 0.72, 0), "HealPotionBtn")
-- Add black border
local border = Instance.new("UIStroke")
border.Color = Color3.new(0, 0, 0) -- black
border.Thickness = 1
border.Parent = healBtn

-- Add SpeedPotionBtn (above of HealPotionBtn)
local speedBtn = createToolButton("Speed", "1843072067", UDim2.new(0.72, 0, 0.58, 0), "SpeedPotionBtn")
local border = Instance.new("UIStroke")
border.Color = Color3.new(0, 0, 0) -- black
border.Thickness = 1
border.Parent = speedBtn

-- Add JumpPotionBtn (above SpeedPotionBtn)
local jumpBtn = createToolButton("HighJump", "1843065736", UDim2.new(0.66, 0, 0.58, 0), "JumpPotionBtn")
local border = Instance.new("UIStroke")
border.Color = Color3.new(0, 0, 0) -- black
border.Thickness = 1
border.Parent = jumpBtn

-- Add ShieldBtn (right of JumpPotionBtn)
local shieldBtn = createToolButton("Shield", "1843056725", UDim2.new(0.66, 0, 0.72, 0), "ShieldBtn")
local border = Instance.new("UIStroke")
border.Color = Color3.new(0, 0, 0) -- black
border.Thickness = 1
border.Parent = shieldBtn

local axeBtn  = createToolButton("Axe",  "399887168", UDim2.new(0.78, 0, 0.72, 0), "PikAxeBtn")

-- // TOOL DATA
local buttons = {
    Heal = healBtn,
    Axe  = axeBtn,
    HighJump = jumpBtn,
    Speed  = speedBtn,
    Shield = shieldBtn,
}

-- // FUNCTIONS
local function updateButtonAppearance(tool)
    local btn = buttons[tool]
    if btn then
        btn.BackgroundColor3 = toggles[tool] and Color3.fromRGB(0, 255, 255) or Color3.new(1, 1, 1)
    end
end

local function updateButtonVisibility(tool)
    local hasTool = player.Backpack:FindFirstChild(tool) or character:FindFirstChild(tool)
    local btn = buttons[tool]
    if btn then
        btn.Visible = hasTool and true or false
    end
end

local function equipTool(tool)
    local found = player.Backpack:FindFirstChild(tool) or character:FindFirstChild(tool)
    if found and found:IsA("Tool") then
        humanoid:EquipTool(found)
    end
end

local function unequipTool(tool)
    local held = character:FindFirstChild(tool)
    if held then
        humanoid:UnequipTools()
    end
end

-- // TOGGLE BUTTONS
for toolName, btn in pairs(buttons) do
    btn.MouseButton1Click:Connect(function()
        toggles[toolName] = not toggles[toolName]
        if toggles[toolName] then
            equipTool(toolName)
        else
            unequipTool(toolName)
        end
        updateButtonAppearance(toolName)
    end)
end

-- // MONITOR TOOL CHANGES
local function monitorToolChanges()
    local function handleToolAdded(child)
        if child:IsA("Tool") then
            local name = child.Name
            if buttons[name] then
                updateButtonVisibility(name)

                -- Manual click
                if not toggles[name] then
                    toggles[name] = true
                    updateButtonAppearance(name)
                end

                -- Untoggle others
                for other, _ in pairs(toggles) do
                    if other ~= name and toggles[other] then
                        toggles[other] = false
                        updateButtonAppearance(other)
                    end
                end
            end
        end
    end

    local function handleToolRemoved(child)
        local name = child.Name
        if buttons[name] then
            updateButtonVisibility(name)

            if toggles[name] then
                toggles[name] = false
                updateButtonAppearance(name)
            end
        end
    end

    character.ChildAdded:Connect(handleToolAdded)
    character.ChildRemoved:Connect(handleToolRemoved)
    player.Backpack.ChildAdded:Connect(function(child)
        if buttons[child.Name] then updateButtonVisibility(child.Name) end
    end)
    player.Backpack.ChildRemoved:Connect(function(child)
        if buttons[child.Name] then updateButtonVisibility(child.Name) end
    end)
end

-- // CHARACTER RESET
player.CharacterAdded:Connect(function(char)
    character = char
    humanoid = character:WaitForChild("Humanoid")
    for tool, _ in pairs(toggles) do
        toggles[tool] = false
        updateButtonAppearance(tool)
        updateButtonVisibility(tool)
    end
    monitorToolChanges()
end)

-- // INITIALIZE
for tool, _ in pairs(toggles) do
    updateButtonAppearance(tool)
    updateButtonVisibility(tool)
end

monitorToolChanges()

------------------------ MEGA VIP ENTER TELEPORT ------------------------
local enterDestination = Vector3.new(0, 175, 70)
local enterTeleportsFolder = workspace:WaitForChild("Lobby"):WaitForChild("MegaVIPRoom"):WaitForChild("Teleport"):WaitForChild("Enter")

for _, part in pairs(enterTeleportsFolder:GetChildren()) do
	if part.Name == "Teleporter A" and part:FindFirstChild("TeleportMegaVIPEnter") then
		part.Touched:Connect(function(hit)
			local character = hit.Parent
			local humanoid = character:FindFirstChildOfClass("Humanoid")
			if humanoid then
				local rootPart = character:FindFirstChild("HumanoidRootPart")
				if rootPart then
					rootPart.CFrame = CFrame.new(enterDestination)

					-- Resize effect for Enter
					local originalSize = part.Size
					part.Size = Vector3.new(8, 0.01, 8)
					task.delay(1, function()
						part.Size = originalSize
					end)
				end
			end
		end)
	end
end

------------------------ MEGA VIP EXIT TELEPORT ------------------------
local exitDestination = Vector3.new(0, 177.1, 6)
local exitTeleportsFolder = workspace:WaitForChild("Lobby"):WaitForChild("MegaVIPRoom"):WaitForChild("Teleport"):WaitForChild("Exit")

for _, part in pairs(exitTeleportsFolder:GetChildren()) do
	if part.Name == "Teleporter A" and part:FindFirstChild("TeleportMegaVIPExit") then
		part.Touched:Connect(function(hit)
			local character = hit.Parent
			local humanoid = character:FindFirstChildOfClass("Humanoid")
			if humanoid then
				local rootPart = character:FindFirstChild("HumanoidRootPart")
				if rootPart then
					rootPart.CFrame = CFrame.new(exitDestination)

					-- Resize effect for Exit
					local originalSize = part.Size
					part.Size = Vector3.new(4, 0.01, 4)
					task.delay(1, function()
						part.Size = originalSize
					end)
				end
			end
		end)
	end
end


------------------------ PLAYER CHAMS ------------------------
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

function applyChamsToPlayer(player)
	if player ~= LocalPlayer then
		player.CharacterAdded:Connect(function(character)
			local highlight = Instance.new("Highlight")
			highlight.FillColor = Color3.fromRGB(255, 0, 0) -- Red fill
			highlight.OutlineColor = Color3.fromRGB(255, 255, 255) -- White outline
			highlight.OutlineTransparency = 0 -- Solid outline
			highlight.FillTransparency = 0.3 -- Slight transparency
			highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
			highlight.Name = "Cham"
			highlight.Parent = character
			highlight.Adornee = character
		end)

		-- Apply immediately if already spawned
		if player.Character then
			local existing = player.Character:FindFirstChild("Cham")
			if not existing then
				local highlight = Instance.new("Highlight")
				highlight.FillColor = Color3.fromRGB(255, 0, 0)
				highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
				highlight.OutlineTransparency = 0
				highlight.FillTransparency = 0.3
				highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
				highlight.Name = "Cham"
				highlight.Adornee = player.Character
				highlight.Parent = player.Character
			end
		end
	end
end

-- Apply chams to all current players
for _, player in pairs(Players:GetPlayers()) do
	applyChamsToPlayer(player)
end

-- Apply chams to new players joining
Players.PlayerAdded:Connect(function(player)
	applyChamsToPlayer(player)
end)
